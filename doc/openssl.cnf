[ req ]
default_bits		= 2048
default_md		= sha256
distinguished_name	= req_distinguished_name
x509_extensions	= v3_ca	# The extentions to add to the self signed cert
req_extensions = v3_req # The extensions to add to a certificate request

[ v3_req ]
subjectKeyIdentifier = hash
basicConstraints = critical, CA:FALSE

[ req_distinguished_name ]
countryName                     = Country Name (2 letter code)
#countryName_default             = US
countryName_min                 = 2
countryName_max                 = 2

stateOrProvinceName             = State or Province Name (full name)
#stateOrProvinceName_default    = Default Province

localityName                    = Locality Name (eg, city)
#localityName_default            = Default City

0.organizationName              = Organization Name (eg, company)
#0.organizationName_default      = Default Company Ltd

# we can do this but it is not needed normally :-)
#1.organizationName             = Second Organization Name (eg, company)
#1.organizationName_default     = World Wide Web Pty Ltd

organizationalUnitName          = Organizational Unit Name (eg, section)
#organizationalUnitName_default =

commonName                      = Common Name (eg, your name or your server\'s hostname)
commonName_max                  = 64

emailAddress                    = Email Address
emailAddress_max                = 64

[ ca ]
default_ca      = CA_default            # The default ca section

####################################################################
[ CA_default ]

dir             = /etc/pki/CA/intermediate           # Where everything is kept
certs           = $dir/certs            # Where the issued certs are kept
crl_dir         = $dir/crl              # Where the issued crl are kept
database        = $dir/index.txt        # database index file.
new_certs_dir   = $dir/newcerts         # default place for new certs.

certificate     = $dir/cacert.pem       # The CA certificate
serial          = $dir/serial           # The current serial number
crlnumber       = $dir/crlnumber        # the current crl number
                                        # must be commented out to leave a V1 CRL
crl             = $dir/crl.pem          # The current CRL
private_key     = $dir/private/cakey.pem# The private key
RANDFILE        = $dir/private/.rand    # private random number file

# Extensions to add to a CRL. Note: Netscape communicator chokes on V2 CRLs
# so this is commented out by default to leave a V1 CRL.
# crlnumber must also be commented out to leave a V1 CRL.
crl_extensions        = crl_ext

default_days    = 365                   # how long to certify for
default_crl_days= 30                    # how long before next CRL
default_md      = default               # use public key default MD
preserve        = no                    # keep passed DN ordering

# A few difference way of specifying how similar the request should look
# For type CA, the listed attributes must be the same, and the optional
# and supplied fields are just that :-)
policy          = policy_anything
copy_extensions = copy

# For the CA policy
[ policy_match ]
countryName             = match
stateOrProvinceName     = match
organizationName        = match
organizationalUnitName  = optional
commonName              = supplied
emailAddress            = optional

# For the 'anything' policy
# At this point in time, you must list all acceptable 'object'
# types.
[ policy_anything ]
countryName             = optional
stateOrProvinceName     = optional
localityName            = optional
organizationName        = optional
organizationalUnitName  = optional
commonName              = supplied
emailAddress            = optional

[ crl_ext ]

# CRL extensions.
# Only issuerAltName and authorityKeyIdentifier make any sense in a CRL.

# issuerAltName=issuer:copy
authorityKeyIdentifier=keyid:always

# https://cabforum.org/about-ev-ssl/
[ v3_ca ]
# Extensions for a typical CA
keyUsage=critical,digitalSignature,keyCertSign,cRLSign

# PKIX recommendation.
subjectKeyIdentifier=hash
authorityKeyIdentifier=keyid:always,issuer

# This is what PKIX recommends but some broken software chokes on critical
# extensions.
basicConstraints=critical,CA:TRUE

[ v3_ca_intermediate ]
# Extensions for a typical CA
keyUsage=critical,keyCertSign,cRLSign
# PKIX recommendation.
subjectKeyIdentifier=hash
authorityKeyIdentifier=keyid:always,issuer
# This is what PKIX recommends but some broken software chokes on critical
# extensions.
basicConstraints=critical,CA:TRUE, pathlen:0
crlDistributionPoints=crldp_section

[crldp_section]
fullname=URI:http://crl.gamehack.com/crls/ghglobal.crl

[ ocsp_cert ]
authorityKeyIdentifier = keyid,issuer
noCheck = ignored
extendedKeyUsage = OCSPSigning
keyUsage =  critical,digitalSignature
#basicConstraints=critical,CA:FALSE

[ usr_cert ]
authorityKeyIdentifier=keyid,issuer
keyUsage = critical, digitalSignature, keyEncipherment, dataEncipherment
extendedKeyUsage = serverAuth, clientAuth
crlDistributionPoints = usr_crldp_section
basicConstraints = critical, CA:FALSE
authorityInfoAccess = OCSP;URI:http://ghssl-ocsp.gamehack.com, caIssuers;URI:http://ghssl-aia.gamehack.com/ghssl.crt

[ usr_crldp_section ]
fullname=URI:http://ghssl-crl.gamehack.com/crls/ghssl.crl
